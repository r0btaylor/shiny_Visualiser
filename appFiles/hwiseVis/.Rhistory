if(!require("shinyjs")) {
install.packages("shinyjs")
library(shinyjs)
}
if(!require("shinythemes")) {
install.packages("shinythemes")
library(shinythemes)
}
if(!require("shinyWidgets")) {
install.packages("shinyWidgets")
library(shinyWidgets)
}
if(!require("shinycssloaders")) {
install.packages("shinycssloaders")
library(shinycssloaders)
}
if(!require("excel.link")) {
install.packages("excel.link")
library(excel.link)
}
if(!require("dplyr")) {
install.packages("dplyr")
library(dplyr)
}
if(!require("skimr")) {
install.packages("skimr")
library(skimr)
}
if(!require("DT")) {
install.packages("DT")
library(DT)
}
if(!require("leaflet")) {
install.packages("leaflet")
library(leaflet)
}
if(!require("ggplot2")) {
install.packages("ggplot2")
library(ggplot2)
}
if(!require("plotly")) {
install.packages("plotly")
library(plotly)
}
if(!require("leafem")) {
install.packages("leafem")
library(leafem)
}
if(!require("stringr")) {
install.packages("stringr")
library(stringr)
}
if(!require("sf")) {
install.packages("sf")
library(sf)
}
df <- try(xl.read.file("~/DataScienceMsc/dissertation/HWISE Visualiser/data/Socio-Economic Survey, Teknaf Ground Water Phase 2_LABELS",header = FALSE))
df <- try(xl.read.file("~/DataScienceMsc/dissertation/HWISE Visualiser/data/Socio-Economic Survey, Teknaf Ground Water Phase 2_LABELS",header = FALSE))
df <- xl.read.file("~/DataScienceMsc/dissertation/HWISE Visualiser/data/Socio-Economic Survey, Teknaf Ground Water Phase 2_LABELS",header = FALSE)
df <- xl.read.file("~/DataScienceMsc/dissertation/HWISE Visualiser/data/Socio-Economic Survey, Teknaf Ground Water Phase 2_LABELS.csv",header = FALSE)
View(df)
df <- data.frame(sapply(df, tolower))
# Set row 1 as colnames
colnames(df) <- df[1, ]
# Remove row 1 as now used in colnames
df <- df[-1, ]
# Append digits to make colnames unique
colnames(df) <- make.unique(colnames(df), sep = "_")
df <- df %>% rename("location" = "host/refugee",
"sex" = "gender",
"gps-longitude" = "gps-long")
df <- df %>% rename("location" = "host/refugee",
"sex" = "gender",
"gps-longitude" = "gps-long ")
runApp('test.R')
runApp('test.R')
View(df)
df[1,""]
df[1," "]
colnames(df,84)
colnames(df[,84])
runApp('test.R')
runApp('test.R')
typeof(sd[2,'sd5_1'])
sd[2,'sd5_1']
sd['sd5_1']
typeof(df[2,'sd5_1'])
df['pay3']
unique(df['pay3'])
levels(factor(df['pay3'])))
levels(factor(df['pay3']))
factor(df['pay3'])
factor(df['pay5'])
runApp('test.R')
runApp('test.R')
levels(factor(df['wat27']))
runApp('test.R')
runApp('test.R')
runApp('test.R')
levels(factor(df['pay9']))
df['pay9']
df['pay9'][15]
df[15,'pay9']
df[16,'pay9']
df[16,'pay9'][1]
as,numeric(df[16,'pay9'][1])
as.numeric(df[16,'pay9'][1])
?as.numeric
levels(factor(df[pay9]))
levels(factor(df["pay9"]))
runApp('test.R')
runApp('test.R')
runApp('test.R')
as.numeric("100")
suppressWarnings(as.numeric("pay9"))
runApp('test.R')
runApp('test.R')
runApp('test.R')
runApp('test.R')
runApp('test.R')
runApp('test.R')
runApp('test.R')
runApp('test.R')
runApp('test.R')
df = xl.read.file("C:\Users\rob_t\OneDrive\Documents\DataScienceMsc\dissertation\HWISE Visualiser\data\Socio-Economic Survey, Teknaf Ground Water Phase 2_LABELS - Copy.csv",
df = xl.read.file("C:\\Users\\rob_t\\OneDrive\\Documents\\DataScienceMsc\\dissertation\\HWISE Visualiser\\data\\Socio-Economic Survey, Teknaf Ground Water Phase 2_LABELS - Copy.csv",
header = FALSE)
df = xl.read.file('~/DataScienceMsc/dissertation/HWISE Visualiser/data/Socio-Economic Survey, Teknaf Ground Water Phase 2_LABELS - Copy.csv',
header = FALSE)
View(df)
Change all chars to lowercase
# Change all chars to lowercase
df <- data.frame(sapply(df, tolower))
# Set row 1 as colnames
colnames(df) <- df[1, ]
# Remove row 1 as now used in colnames
df <- df[-1, ]
# Append digits to make colnames unique
colnames(df) <- make.unique(colnames(df), sep = "_")
# Fix name of location column
df <- df %>% rename("location" = "host/refugee",
"sex" = "gender",
"gps-longitude" = "gps-long ")
#### Define columns to include ----
df <- select(raw.data(),
"location",
"union",
"ward",
"village",
"camp",
"block",
"gps-latitude",
"gps-longitude",
"sex",
starts_with(c("sd","li","wb","wat","hw","pay")),
-c("sd5","sd12_1","sd15_1","sd19_1","wb3_1","wat1a"," "," _1",
"wat16","wat17","wat26")) %>%
slice(-1)
#### Define columns to include ----
df <- select(df,
"location",
"union",
"ward",
"village",
"camp",
"block",
"gps-latitude",
"gps-longitude",
"sex",
starts_with(c("sd","li","wb","wat","hw","pay")),
-c("sd5","sd12_1","sd15_1","sd19_1","wb3_1","wat1a"," "," _1",
"wat16","wat17","wat26")) %>%
slice(-1)
# Consistent values
df[ , ] <- apply(df[ , ], 2, function(x) {
x = replace(x, which(x=="false"|x=="no"), 0)
x = replace(x, which(x=="true"|x=="yes"),1)
x = replace(x, which(x=="other"),77)
x = replace(x, which(x=="dont_know"),88)
})
# Replace sd values
df[, grepl("sd", names(df))] <- apply(df[,grepl("sd", names(df))], 2, function(x){
x = replace(x, which(x=="self"|x=="myself"|x=="single"|x=="no_formal_education"|x=="concrete/brick"|x=="owned"|x=="wood"),1)
x = replace(x, which(x=="spouse"|x=="my_spouse"|x=="divorced"|x=="primary_school"|x=="processed_wood"|x=="rented"|x=="gas_bottles"),2)
x = replace(x, which(x=="an_adult_child"|x=="adult_child"|x=="widowed"|x=="boy_children"|x=="secondary_school"|x=="wood/canvas/plastic"|x=="allocated/given_by_authorities"),3)
x = replace(x, which(x=="a_grandparent"|x=="married"|x=="girl_children"|x=="polytechnic_training"),4)
x = replace(x, which(x=="other_family_members"|x=="university/college"),5)
x = replace(x, which(x=="shared_responsibility"),6)
})
# Replace "hw" question values
df[, grepl("hw", names(df))] <- apply(df[, grepl("hw",names(df))], 2, function(x){
x = replace(x, which(x=="0_times"|x=="announced/scheduled"), 1)
x = replace(x, which(x=="1-2_times"|x=="unexpected"), 2)
x = replace(x, which(x=="3-10_times"), 3)
x = replace(x, which(x=="11-20_times"), 4)
x = replace(x, which(x=="more_than_20_times"), 5)
})
# Replace "wat" question values
df[, grepl("wat", names(df))] <- apply(df[, grepl("wat",names(df))], 2, function(x){
x = replace(x, which(x=="piped_water_to_dwelling"|x=="january"), 1)
x = replace(x, which(x=="stand_pipe"|x=="february"), 2)
x = replace(x, which(x=="borehole/tubewell"|x=="march"), 3)
x = replace(x, which(x=="protected_dug_well"|x=="april"), 4)
x = replace(x, which(x=="unprotected_dug_well"|x=="may"), 5)
x = replace(x, which(x=="protected_sping"|x=="june"), 6)
x = replace(x, which(x=="unprotected_spring"|x=="july"), 7)
x = replace(x, which(x=="rainwater_collection"|x=="august"), 8)
x = replace(x, which(x=="small_water_vendor"|x=="september"), 9)
x = replace(x, which(x=="tanker_truck"|x=="october"), 10)
x = replace(x, which(x=="bottled_water"|x=="november"), 11)
x = replace(x, which(x=="bagged_sachet_water"|x=="december"), 12)
x = replace(x, which(x=="surface_water_pond_river_lake"), 13)
x = replace(x, which(x=="other_person"), 14)
})
# Replace "li" question values
df[, grepl("li",names(df))] <- apply(df[, grepl("li",names(df))], 2, function(x){
x = replace(x, which(x=="none"), 1)
x = replace(x, which(x=="some"), 2)
x = replace(x, which(x=="about_half"|x=="half"), 3)
x = replace(x, which(x=="most"), 4)
x = replace(x, which(x=="all"), 5)
})
# Replace "wb" question values
df[, grepl("wb", names(df))] <- apply(df[, grepl("wb",names(df))], 2, function(x){
x = replace(x, which(x=="never"),0)
x = replace(x, which(x=="very_dissatisfied"|x=="better_health_services"|x=="poor"|x=="almost_never"),1)
x = replace(x, which(x=="somewhat_dissatisfied"|x=="safe_water_services"|x=="fair"|x=="sometimes"),2)
x = replace(x, which(x=="somewhat_satisfied"|x=="access_to_education"|x=="good"|x=="fairly_often"),3)
x = replace(x, which(x=="very_satisfied"|x=="better_communication_with_host_communities"|x=="very_good"|x=="very_often"),4)
x = replace(x, which(x=="safe_return_to_myanmar"|x=="excellent"),5)
x = replace(x, which(x=="other"),6)
})
# Replace "pay" question values
df[, grepl("pay", names(df))] <- apply(df[, grepl("pay",names(df))], 2, function(x){
x=replace(x, which(x=="not_important_at_all"|x=="fixed_cost_per_month"|x=="dphe"|x=="mobile_phone_or_digital_payment"),1)
x=replace(x, which(x=="neither_imp_nor_unimportant"|x=="fixed_cost_per_amount_"|x=="union_council"|x=="cash_to_collector"),2)
x=replace(x, which(x=="somewhat_important"|x=="vc_permonth_on_set_factors"|x=="service_provider"|x=="visit_office_to_pay_cash"),3)
x=replace(x, which(x=="very_important"|x=="variable_cost_per_amount_or_use"|x=="landowner"),4)
x=replace(x, which(x=="no_fixed_payment_is_made"|x=="nobody_its_free"),5)
x=replace(x, which(x=="it_is_free"),6)
x=replace(x, which(x=="dont_know"),7)
})
# Re-code for consistency
df$camp <- sapply(df$camp, function(x){
x = replace(x, which(x=="nayapara registered camp"), "nrc")
})
df[,"pay9"] <- suppressWarnings(sapply(df[,"pay9"], as.numeric))
df$pay9[is.na(df$pay9)] <- 0
levels(factor(df[,'sd11']))
levels(factor(df[,'li9']))
levels(factor(df[,'wb3']))
x = replace(x, which(x=="dont_know"),88)
xl.read.file('~/DataScienceMsc/dissertation/HWISE Visualiser/data/Socio-Economic Survey, Teknaf Ground Water Phase 2_LABELS - Copy.csv', header = FALSE)
df <- xl.read.file('~/DataScienceMsc/dissertation/HWISE Visualiser/data/Socio-Economic Survey, Teknaf Ground Water Phase 2_LABELS - Copy.csv', header = FALSE)
#### Define columns to include ----
df <- select(raw.data(),
"location",
"union",
"ward",
"village",
"camp",
"block",
"gps-latitude",
"gps-longitude",
"sex",
starts_with(c("sd","li","wb","wat","hw","pay")),
-c("sd5","sd12_1","sd15_1","sd19_1","wb3_1","wat1a"," "," _1",
"wat16","wat17","wat26")) %>%
slice(-1)
#### Define columns to include ----
df <- select(df,
"location",
"union",
"ward",
"village",
"camp",
"block",
"gps-latitude",
"gps-longitude",
"sex",
starts_with(c("sd","li","wb","wat","hw","pay")),
-c("sd5","sd12_1","sd15_1","sd19_1","wb3_1","wat1a"," "," _1",
"wat16","wat17","wat26")) %>%
slice(-1)
df <- xl.read.file('~/DataScienceMsc/dissertation/HWISE Visualiser/data/Socio-Economic Survey, Teknaf Ground Water Phase 2_LABELS - Copy.csv', header = FALSE)
# Change all chars to lowercase
df <- data.frame(sapply(df, tolower))
# Set row 1 as colnames
colnames(df) <- df[1, ]
# Remove row 1 as now used in colnames
df <- df[-1, ]
# Append digits to make colnames unique
colnames(df) <- make.unique(colnames(df), sep = "_")
# Fix name of location column
df <- df %>% rename("location" = "host/refugee",
"sex" = "gender",
"gps-longitude" = "gps-long ")
#### Define columns to include ----
df <- select(df,
"location",
"union",
"ward",
"village",
"camp",
"block",
"gps-latitude",
"gps-longitude",
"sex",
starts_with(c("sd","li","wb","wat","hw","pay")),
-c("sd5","sd12_1","sd15_1","sd19_1","wb3_1","wat1a"," "," _1",
"wat16","wat17","wat26")) %>%
slice(-1)
# Consistent values
df[ , ] <- apply(df[ , ], 2, function(x) {
x = replace(x, which(x=="false"|x=="no"), 0)
x = replace(x, which(x=="true"|x=="yes"),1)
x = replace(x, which(x=="other"),77)
x = replace(x, which(x=="dont_know"),88)
})
# Replace sd values
df[, grepl("sd", names(df))] <- apply(df[,grepl("sd", names(df))], 2, function(x){
x = replace(x, which(x=="self"|x=="myself"|x=="single"|x=="no_formal_education"|x=="concrete/brick"|x=="owned"|x=="wood"),1)
x = replace(x, which(x=="spouse"|x=="my_spouse"|x=="divorced"|x=="primary_school"|x=="processed_wood"|x=="rented"|x=="gas_bottles"),2)
x = replace(x, which(x=="an_adult_child"|x=="adult_child"|x=="widowed"|x=="boy_children"|x=="secondary_school"|x=="wood/canvas/plastic"|x=="allocated/given_by_authorities"),3)
x = replace(x, which(x=="a_grandparent"|x=="married"|x=="girl_children"|x=="polytechnic_training"),4)
x = replace(x, which(x=="other_family_members"|x=="university_college"),5)
x = replace(x, which(x=="shared_responsibility"),6)
})
# Replace "hw" question values
df[, grepl("hw", names(df))] <- apply(df[, grepl("hw",names(df))], 2, function(x){
x = replace(x, which(x=="0_times"|x=="announced/scheduled"), 1)
x = replace(x, which(x=="1-2_times"|x=="unexpected"), 2)
x = replace(x, which(x=="3-10_times"), 3)
x = replace(x, which(x=="11-20_times"), 4)
x = replace(x, which(x=="more_than_20_times"), 5)
})
# Replace "wat" question values
df[, grepl("wat", names(df))] <- apply(df[, grepl("wat",names(df))], 2, function(x){
x = replace(x, which(x=="piped_water_to_dwelling"|x=="january"), 1)
x = replace(x, which(x=="stand_pipe"|x=="february"), 2)
x = replace(x, which(x=="borehole/tubewell"|x=="march"), 3)
x = replace(x, which(x=="protected_dug_well"|x=="april"), 4)
x = replace(x, which(x=="unprotected_dug_well"|x=="may"), 5)
x = replace(x, which(x=="protected_sping"|x=="june"), 6)
x = replace(x, which(x=="unprotected_spring"|x=="july"), 7)
x = replace(x, which(x=="rainwater_collection"|x=="august"), 8)
x = replace(x, which(x=="small_water_vendor"|x=="september"), 9)
x = replace(x, which(x=="tanker_truck"|x=="october"), 10)
x = replace(x, which(x=="bottled_water"|x=="november"), 11)
x = replace(x, which(x=="bagged_sachet_water"|x=="december"), 12)
x = replace(x, which(x=="surface_water_pond_river_lake"), 13)
x = replace(x, which(x=="other_person"), 14)
})
# Replace "li" question values
df[, grepl("li",names(df))] <- apply(df[, grepl("li",names(df))], 2, function(x){
x = replace(x, which(x=="none"), 1)
x = replace(x, which(x=="some"), 2)
x = replace(x, which(x=="about_half"|x=="half"), 3)
x = replace(x, which(x=="almost"), 4)
x = replace(x, which(x=="all"), 5)
})
# Replace "wb" question values
df[, grepl("wb", names(df))] <- apply(df[, grepl("wb",names(df))], 2, function(x){
x = replace(x, which(x=="never"),0)
x = replace(x, which(x=="very_dissatisfied"|x=="better_health_services"|x=="poor"|x=="almost_never"),1)
x = replace(x, which(x=="somewhat_dissatisfied"|x=="safe_water_services"|x=="fair"|x=="sometimes"),2)
x = replace(x, which(x=="somewhat_satisfied"|x=="access_to_education"|x=="good"|x=="fairly_often"),3)
x = replace(x, which(x=="very_satisfied"|x=="better_comms_with_host"|x=="very_good"|x=="very_often"),4)
x = replace(x, which(x=="safe_return_to_myanmar"|x=="excellent"),5)
x = replace(x, which(x=="other"),6)
})
# Replace "pay" question values
df[, grepl("pay", names(df))] <- apply(df[, grepl("pay",names(df))], 2, function(x){
x=replace(x, which(x=="not_important_at_all"|x=="fixed_cost_per_month"|x=="dphe"|x=="mobile_phone_or_digital_payment"),1)
x=replace(x, which(x=="neither_imp_nor_unimportant"|x=="fixed_cost_per_amount_"|x=="union_council"|x=="cash_to_collector"),2)
x=replace(x, which(x=="somewhat_important"|x=="vc_permonth_on_set_factors"|x=="service_provider"|x=="visit_office_to_pay_cash"),3)
x=replace(x, which(x=="very_important"|x=="variable_cost_per_amount_or_use"|x=="landowner"),4)
x=replace(x, which(x=="no_fixed_payment_is_made"|x=="nobody_its_free"),5)
x=replace(x, which(x=="it_is_free"),6)
x=replace(x, which(x=="dont_know"),7)
})
# Re-code for consistency
df$camp <- sapply(df$camp, function(x){
x = replace(x, which(x=="nayapara registered camp"), "nrc")
})
df[,"pay9"] <- suppressWarnings(sapply(df[,"pay9"], as.numeric))
df$pay9[is.na(df$pay9)] <- 0
# Define numeric variables
df1 <- df %>%
mutate(across(-c("location",
"union",
"ward",
"village",
"camp",
"block",
"sex",
"sd10_1",
"sd10_2",
"li8",
"li8_1",
"wb9a",
"wb9b",
"wb9c",
"wat2a",
"wat8",
"wat9_5",
"wat28a",
"wat28b",
"wat29",
"pay4_1",
"pay5_1"), as.numeric))
View(df1)
rm(df1)
# Define numeric variables
df <- df %>%
mutate(across(-c("location",
"union",
"ward",
"village",
"camp",
"block",
"sex",
"sd10_1",
"sd10_2",
"li8",
"li8_1",
"wb9a",
"wb9b",
"wb9c",
"wat2a",
"wat8",
"wat9_5",
"wat28a",
"wat28b",
"wat29",
"pay4_1",
"pay5_1"), as.numeric))
# Overall HWISE score
df_hw <- df %>%
select(starts_with("hw"), -("hw2a"))
df$hw <- rowSums(pmin(as.matrix(df_hw - 1), 3))
rm(df_hw)
df <- df %>%
relocate(hw, .before = hw1)
View(df)
raw <- xl.read.file('~/DataScienceMsc/dissertation/HWISE Visualiser/data/Socio-Economic Survey, Teknaf Ground Water Phase 2_LABELS - Copy.csv', header = FALSE)
View(raw)
View(raw)
# Time to collect per week
df <- df %>%
mutate(wat5a = (wat4 * wat5) * 7) %>%
relocate(wat5a, .after = wat5)
# Change to grouped values
df$wat5b <- sapply(df$wat5a, function(x){
x = replace(x, which(x<=100), 1)
x = replace(x, which(x>100 & x<=200), 2)
x = replace(x, which(x>200 & x<=300), 3)
x = replace(x, which(x>300 & x<=400), 4)
x = replace(x, which(x>400 & x<=500), 5)
x = replace(x, which(x>500 & x<=600), 6)
x = replace(x, which(x>600), 7)
})
df <- df %>% relocate(wat5b, .after = wat5a)
# Collapse boy/girl under 18 to single var
df <- df %>%
mutate(sd6_ = sd6 + sd6_1) %>%
relocate(sd6_, .before = sd6) %>%
select(-c(sd6, sd6_1))
runApp('test.R')
library(shiny); runApp('app-phase1.R')
shiny::runApp()
format(ISOdatetime(2000,1:12,1,0,0,0),"%b")
runApp()
x = c("Jan", "Feb")
x in format(ISOdatetime(2000,1:12,1,0,0,0),"%b")
x %in% format(ISOdatetime(2000,1:12,1,0,0,0),"%b")
x[1]
x[1] %in% format(ISOdatetime(2000,1:12,1,0,0,0),"%b")
format(ISOdatetime(2000,1:12,1,0,0,0),"%b") %in% x
format(ISOdatetime(2000,1:12,1,0,0,0),"%b")
c(format(ISOdatetime(2000,1:12,1,0,0,0),"%b"))
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
?CheckboxGroupInput
?checkboxGroupInput
runApp()
runApp()
runApp()
?updateCheckboxGroupInput
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
